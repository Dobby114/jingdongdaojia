{"version":3,"file":"js/login.7523d23d.js","mappings":"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","sources":["webpack://jingdong/./src/components/Toast.vue","webpack://jingdong/./src/components/Toast.vue?44c7","webpack://jingdong/./src/views/login/Login.vue","webpack://jingdong/./src/views/login/Login.vue?9557"],"sourcesContent":["<template>\r\n  <div class=\"toast\">{{ toastMessa }}</div>\r\n</template>\r\n\r\n<script>\r\n// 不需要路由跳转的子组件不需要写名字，直接import的就是整个vue文件中的东西\r\nimport { reactive, toRefs } from 'vue'\r\nconst useToastEffect = () => {\r\n  const toastData = reactive({ show: false, toastMessa: '' })\r\n  const showToast = meesa => {\r\n    toastData.show = true\r\n    toastData.toastMessa = meesa\r\n    setTimeout(() => {\r\n      toastData.show = false\r\n      toastData.toastMessa = ''\r\n    }, 2000)\r\n  }\r\n  // 对象解构是要用名字来结构的，所以名字要对应\r\n  const { show, toastMessa } = toRefs(toastData)\r\n  return { show, toastMessa, showToast }\r\n}\r\nexport default {\r\n  name: 'Toast',\r\n  props: ['toastMessa']\r\n}\r\nexport { useToastEffect }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.toast {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 0.2rem;\r\n  background-color: rgba(0, 0, 0, 0.35);\r\n  border-radius: 0.05rem;\r\n  color: azure;\r\n}\r\n</style>\r\n","import { render } from \"./Toast.vue?vue&type=template&id=6d51e152&scoped=true\"\nimport script from \"./Toast.vue?vue&type=script&lang=js\"\nexport * from \"./Toast.vue?vue&type=script&lang=js\"\n\nimport \"./Toast.vue?vue&type=style&index=0&id=6d51e152&lang=scss&scoped=true\"\n\nimport exportComponent from \"G:\\\\前端学习\\\\jingdong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6d51e152\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container wrapper\">\r\n    <div class=\"palceholder\"><img src=\"https://www.dell-lee.com/imgs/vue3/user.png\" alt=\"\" /></div>\r\n    <div class=\"container__input container__input--account\"><input type=\"text\" placeholder=\"请输入用户名\" v-model=\"username\" /></div>\r\n    <div class=\"container__input container__input--password\"><input type=\"password\" placeholder=\"请输入密码\" v-model=\"password\" /></div>\r\n    <button class=\"login\" @click=\"handleLoginClick\">登录</button>\r\n    <!-- 这是一个a标签，不应该这样 -->\r\n    <!-- <a href=\"#\" class=\"register\" @click=\"handleRegister\">立即注册</a> -->\r\n    <div class=\"other--func\"><router-link to=\"./register\" class=\"register\">立即注册</router-link>|<a href=\"#\" class=\"forget\">忘记密码</a></div>\r\n    <Toast v-if=\"show\" :toastMessa=\"toastMessa\" />\r\n  </div>\r\n</template>\r\nr\r\n<script>\r\n// ???这个import方式也是{}是用export方式导出的，而不加{}的是用export default方式导出的\r\nimport { useRouter } from 'vue-router'\r\nimport { reactive, toRefs } from 'vue'\r\nimport { post2 } from '../../utils/request'\r\nimport Toast, { useToastEffect } from '../../components/Toast.vue'\r\n\r\n// 封装toast，拆分代码--让setup里只关注主流程的东西，并且因为它会在多个页面中使用，所以把它放到toast组件文件汇总，这里直接引入使用就好了\r\nconst useLoginEffect = showToast => {\r\n  // 获得路由实例，对路由跳转做一些改变\r\n  const router = useRouter()\r\n  const data = reactive({ username: '', password: '' })\r\n  const handleLoginClick = async () => {\r\n    // try———catch保证就算是地址错了，还能往下，最后得到catch的错误\r\n    // 点击登录发起post请求,传入后端需要的参数---接口返回数据，根据数据判断是否请求成功\r\n    try {\r\n      // 如果用户没有输入账号或者密码的话，做一个校验提示---如果没填的话，就不会进行下面的发出请求操作\r\n      // console.log(data.username, data.password)\r\n      if (!data.username) {\r\n        showToast('请输入用户名')\r\n        return\r\n      }\r\n      if (!data.password) {\r\n        showToast('请输入密码')\r\n        return\r\n      }\r\n      // 根据后端接口返回的数据来判断\r\n      const result = await post2('/api/user/login', { username: data.username, password: data.password })\r\n      console.log(result)\r\n      if (result?.errno === 0 && result?.data.verifySuccess) {\r\n        localStorage.isLoginToken = result?.data.token\r\n        router.push({ name: 'Home' })\r\n      } else {\r\n        showToast('登录失败')\r\n      }\r\n      // alert('登录失败')\r\n      // 通过push方法来实现跳转\r\n      // localStorage.isLogin === 'true' ? router.push({ name: 'Home' }) : alert('请先登录')\r\n    } catch (err) {\r\n      showToast('请求失败')\r\n      console.error(err)\r\n      // alert('请求失败')\r\n    }\r\n  }\r\n  const { username, password } = toRefs(data)\r\n  return { username, password, handleLoginClick }\r\n}\r\n\r\nexport default {\r\n  name: 'Login',\r\n  components: { Toast },\r\n  // setup只展示代码执行的逻辑\r\n  setup() {\r\n    const { show, toastMessa, showToast } = useToastEffect()\r\n    const { handleLoginClick, username, password } = useLoginEffect(showToast)\r\n\r\n    return {\r\n      username,\r\n      password,\r\n      show,\r\n      toastMessa,\r\n      handleLoginClick,\r\n      showToast\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import '../../style/virable.scss';\r\n.wrapper {\r\n  margin: 0 auto;\r\n  width: 2.95rem;\r\n}\r\n.container {\r\n  // 给父元素设置，让它里面的img、文字、a、span、input标签水平居中\r\n  text-align: center;\r\n  margin-top: 1.2rem;\r\n  .palceholder {\r\n    // 其实做懒加载的方式应该会好很多？\r\n    // 或者别的防抖的方式？\r\n    // 总之我感觉这样不是特别好\r\n    height: 0;\r\n    overflow: hidden;\r\n    padding-bottom: 22.5%;\r\n    img {\r\n      //   width: 0.66rem;\r\n      width: 22.38%;\r\n    }\r\n  }\r\n  &__input {\r\n    // position: relative;\r\n    text-align: left;\r\n    margin-top: 0.38rem;\r\n    // width: 100%;\r\n    height: 0.48rem;\r\n    background-color: #f9f9f9;\r\n    border: 0.01rem solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.06rem;\r\n    font-size: 0.16rem;\r\n  }\r\n  &__input--account {\r\n    input {\r\n      padding: 0.12rem 0 0.12rem 0.16rem;\r\n      background-color: #f9f9f9;\r\n    }\r\n  }\r\n  &__input--password {\r\n    margin-top: 0.16rem;\r\n    input {\r\n      padding: 0.12rem 0 0.12rem 0.16rem;\r\n      background-color: #f9f9f9;\r\n    }\r\n  }\r\n  .login {\r\n    margin-top: 0.32rem;\r\n    width: 100%;\r\n    height: 0.48rem;\r\n    background: #0091ff;\r\n    box-shadow: 0 0.04rem 0.08rem 0 rgba(0, 145, 255, 0.32);\r\n    border-radius: 0.04rem;\r\n    border: none;\r\n    font-size: 0.16rem;\r\n    color: $base-color;\r\n  }\r\n  .other--func {\r\n    font-size: 0.14rem;\r\n    color: rgba(0, 0, 0, 0.5);\r\n    margin-top: 0.16rem;\r\n    a {\r\n      font-size: 0.14rem;\r\n      color: rgba(0, 0, 0, 0.5);\r\n      padding: 0 0.12rem;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./Login.vue?vue&type=template&id=a5400326&scoped=true\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=a5400326&lang=scss&scoped=true\"\n\nimport exportComponent from \"G:\\\\前端学习\\\\jingdong\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a5400326\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_toDisplayString","$props","toastMessa","useToastEffect","toastData","reactive","show","showToast","meesa","setTimeout","toRefs","name","props","__exports__","render","_createElementVNode","src","alt","href","_hoisted_2","_hoisted_3","type","placeholder","$setup","username","$event","_hoisted_4","password","onClick","_cache","args","handleLoginClick","_hoisted_5","_createVNode","_component_router_link","to","_hoisted_6","_createBlock","_component_Toast","useLoginEffect","router","useRouter","data","async","result","post2","console","log","errno","verifySuccess","localStorage","isLoginToken","token","push","err","error","components","Toast","setup"],"sourceRoot":""}